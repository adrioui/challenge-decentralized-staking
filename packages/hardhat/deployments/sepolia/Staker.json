{
  "address": "0xf1784B26eC411223E1c90eF9aF1823Bd4C1C79A2",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "exampleExternalContractAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Stake",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exampleExternalContract",
      "outputs": [
        {
          "internalType": "contract ExampleExternalContract",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "executed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openForWithdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "threshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeLeft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xce7390c571e7f8a84765b37e4c16fbf649d29bc0e8d7ea807f9bae5d9f287aa6",
  "receipt": {
    "to": null,
    "from": "0x6a9F65878958c418bE6635a27d918f14803197F6",
    "contractAddress": "0xf1784B26eC411223E1c90eF9aF1823Bd4C1C79A2",
    "transactionIndex": 107,
    "gasUsed": "437384",
    "logsBloom": "0x
    "blockHash": "0x4cf67d04ca296f0845a4ab074f43b8c757c7eea0c6da5e571a731919b21cf366",
    "transactionHash": "0xce7390c571e7f8a84765b37e4c16fbf649d29bc0e8d7ea807f9bae5d9f287aa6",
    "logs": [],
    "blockNumber": 9126088,
    "cumulativeGasUsed": "51498131",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xbB563e47ffebFb9059e5CaBD86f43A4774205738"
  ],
  "numDeployments": 1,
  "solcInputHash": "f9c4eb79b3e7168eb6e9ccbd408b0816",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exampleExternalContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exampleExternalContract\",\"outputs\":[{\"internalType\":\"contract ExampleExternalContract\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openForWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"threshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeLeft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staker.sol\":\"Staker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ExampleExternalContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20; //Do not change the solidity version as it negatively impacts submission grading\\n\\ncontract ExampleExternalContract {\\n    bool public completed;\\n\\n    function complete() public payable {\\n        completed = true;\\n    }\\n}\\n\",\"keccak256\":\"0x9d7b4fb853a08a242fd15aab47631e4df4b6a455c781c84a77e5888b9badf359\",\"license\":\"MIT\"},\"contracts/Staker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20; //Do not change the solidity version as it negatively impacts submission grading\\n\\nimport \\\"./ExampleExternalContract.sol\\\";\\n\\ncontract Staker {\\n    ExampleExternalContract public exampleExternalContract;\\n    uint256 public deadline;\\n\\n    constructor(address exampleExternalContractAddress) {\\n      exampleExternalContract = ExampleExternalContract(exampleExternalContractAddress);\\n      deadline = block.timestamp + 72 hours;\\n    }\\n\\n    // Collect funds in a payable `stake()` function and track individual `balances` with a mapping:\\n    // (Make sure to add a `Stake(address,uint256)` event and emit it for the frontend `All Stakings` tab to display)\\n    mapping (address => uint256) public balances;\\n    uint256 public constant threshold = 1 ether;\\n    bool public openForWithdraw = false;\\n    bool public executed = false;\\n\\n    event Stake(address indexed sender, uint256 amount);\\n\\n    function stake() public payable {\\n      require(block.timestamp < deadline, \\\"Staking period is over!\\\");\\n      \\n      balances[msg.sender] += msg.value;\\n\\n      emit Stake(msg.sender, msg.value);\\n    }\\n\\n    function execute() public {\\n      require(block.timestamp >= deadline, \\\"Deadline not yet reached\\\");\\n      require(!executed, \\\"Already executed\\\");\\n\\n      if (address(this).balance >= threshold) {\\n        executed = true;\\n        exampleExternalContract.complete{value: address(this).balance}();\\n      } else {\\n        openForWithdraw = true;\\n      }\\n    }\\n\\n    function timeLeft() public view returns (uint256) {\\n      if (block.timestamp >= deadline) {\\n        return 0;\\n      }\\n      return deadline - block.timestamp;\\n    }\\n\\n    function withdraw() public {\\n        require(block.timestamp >= deadline, \\\"Deadline not yet reached\\\");\\n        require(address(this).balance < threshold, \\\"Threshold was met\\\");\\n        \\n        uint256 userBalance = balances[msg.sender];\\n        require(userBalance > 0, \\\"Nothing to withdraw\\\");\\n        \\n        balances[msg.sender] = 0;\\n        (bool sent, ) = msg.sender.call{value: userBalance}(\\\"\\\");\\n        require(sent, \\\"Withdraw failed\\\");\\n    }\\n\\n    // https://solidity-by-example.org/sending-ether/\\n    // Function to receive Ether. msg.data must be empty\\n    // If you want people to be able to send ETH to your contract, use this \\n    receive() external payable {\\n      stake();\\n    }\\n}\\n\",\"keccak256\":\"0xdf4acafbb9d3f52d6d8119ccf002a642473c59541669073ed6f6cbc26f8b59f5\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526003805461ffff1916905534801561001b57600080fd5b506040516106de3803806106de83398101604081905261003a9161006b565b600080546001600160a01b0319166001600160a01b038316179055610062426203f48061009b565b600155506100c2565b60006020828403121561007d57600080fd5b81516001600160a01b038116811461009457600080fd5b9392505050565b808201808211156100bc57634e487b7160e01b600052601160045260246000fd5b92915050565b61060d806100d16000396000f3fe6080604052600436106100955760003560e01c80633ccfd60b116100595780633ccfd60b1461014b57806342cde4e814610160578063614619541461017c5780639876a643146101915780639f75f227146101ab57600080fd5b80631300a6d1146100a957806327e235e3146100d157806329dcb0cf146100fe57806331a38c89146101145780633a4b66f11461014357600080fd5b366100a4576100a26101e3565b005b600080fd5b3480156100b557600080fd5b506100be610294565b6040519081526020015b60405180910390f35b3480156100dd57600080fd5b506100be6100ec366004610565565b60026020526000908152604090205481565b34801561010a57600080fd5b506100be60015481565b34801561012057600080fd5b5060035461013390610100900460ff1681565b60405190151581526020016100c8565b6100a26101e3565b34801561015757600080fd5b506100a26102b8565b34801561016c57600080fd5b506100be670de0b6b3a764000081565b34801561018857600080fd5b506100a2610440565b34801561019d57600080fd5b506003546101339060ff1681565b3480156101b757600080fd5b506000546101cb906001600160a01b031681565b6040516001600160a01b0390911681526020016100c8565b60015442106102395760405162461bcd60e51b815260206004820152601760248201527f5374616b696e6720706572696f64206973206f7665722100000000000000000060448201526064015b60405180910390fd5b33600090815260026020526040812080543492906102589084906105ab565b909155505060405134815233907febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a9060200160405180910390a2565b600060015442106102a55750600090565b426001546102b391906105c4565b905090565b6001544210156103055760405162461bcd60e51b8152602060048201526018602482015277111958591b1a5b99481b9bdd081e595d081c995858da195960421b6044820152606401610230565b670de0b6b3a764000047106103505760405162461bcd60e51b8152602060048201526011602482015270151a1c995cda1bdb19081dd85cc81b595d607a1b6044820152606401610230565b33600090815260026020526040902054806103a35760405162461bcd60e51b81526020600482015260136024820152724e6f7468696e6720746f20776974686472617760681b6044820152606401610230565b336000818152600260205260408082208290555190919083908381818185875af1925050503d80600081146103f4576040519150601f19603f3d011682016040523d82523d6000602084013e6103f9565b606091505b505090508061043c5760405162461bcd60e51b815260206004820152600f60248201526e15da5d1a191c985dc819985a5b1959608a1b6044820152606401610230565b5050565b60015442101561048d5760405162461bcd60e51b8152602060048201526018602482015277111958591b1a5b99481b9bdd081e595d081c995858da195960421b6044820152606401610230565b600354610100900460ff16156104d85760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e48195e1958dd5d195960821b6044820152606401610230565b670de0b6b3a76400004710610556576003805461ff001916610100179055600080546040805163522e117760e01b815290516001600160a01b039092169263522e1177924792600480820193929182900301818588803b15801561053b57600080fd5b505af115801561054f573d6000803e3d6000fd5b5050505050565b6003805460ff19166001179055565b60006020828403121561057757600080fd5b81356001600160a01b038116811461058e57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156105be576105be610595565b92915050565b818103818111156105be576105be61059556fea26469706673582212200675aea084b24566da87e4e8505586d6698413ff569e70c419670bfa5cea373964736f6c63430008140033",
  "deployedBytecode": "0x6080604052600436106100955760003560e01c80633ccfd60b116100595780633ccfd60b1461014b57806342cde4e814610160578063614619541461017c5780639876a643146101915780639f75f227146101ab57600080fd5b80631300a6d1146100a957806327e235e3146100d157806329dcb0cf146100fe57806331a38c89146101145780633a4b66f11461014357600080fd5b366100a4576100a26101e3565b005b600080fd5b3480156100b557600080fd5b506100be610294565b6040519081526020015b60405180910390f35b3480156100dd57600080fd5b506100be6100ec366004610565565b60026020526000908152604090205481565b34801561010a57600080fd5b506100be60015481565b34801561012057600080fd5b5060035461013390610100900460ff1681565b60405190151581526020016100c8565b6100a26101e3565b34801561015757600080fd5b506100a26102b8565b34801561016c57600080fd5b506100be670de0b6b3a764000081565b34801561018857600080fd5b506100a2610440565b34801561019d57600080fd5b506003546101339060ff1681565b3480156101b757600080fd5b506000546101cb906001600160a01b031681565b6040516001600160a01b0390911681526020016100c8565b60015442106102395760405162461bcd60e51b815260206004820152601760248201527f5374616b696e6720706572696f64206973206f7665722100000000000000000060448201526064015b60405180910390fd5b33600090815260026020526040812080543492906102589084906105ab565b909155505060405134815233907febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a9060200160405180910390a2565b600060015442106102a55750600090565b426001546102b391906105c4565b905090565b6001544210156103055760405162461bcd60e51b8152602060048201526018602482015277111958591b1a5b99481b9bdd081e595d081c995858da195960421b6044820152606401610230565b670de0b6b3a764000047106103505760405162461bcd60e51b8152602060048201526011602482015270151a1c995cda1bdb19081dd85cc81b595d607a1b6044820152606401610230565b33600090815260026020526040902054806103a35760405162461bcd60e51b81526020600482015260136024820152724e6f7468696e6720746f20776974686472617760681b6044820152606401610230565b336000818152600260205260408082208290555190919083908381818185875af1925050503d80600081146103f4576040519150601f19603f3d011682016040523d82523d6000602084013e6103f9565b606091505b505090508061043c5760405162461bcd60e51b815260206004820152600f60248201526e15da5d1a191c985dc819985a5b1959608a1b6044820152606401610230565b5050565b60015442101561048d5760405162461bcd60e51b8152602060048201526018602482015277111958591b1a5b99481b9bdd081e595d081c995858da195960421b6044820152606401610230565b600354610100900460ff16156104d85760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e48195e1958dd5d195960821b6044820152606401610230565b670de0b6b3a76400004710610556576003805461ff001916610100179055600080546040805163522e117760e01b815290516001600160a01b039092169263522e1177924792600480820193929182900301818588803b15801561053b57600080fd5b505af115801561054f573d6000803e3d6000fd5b5050505050565b6003805460ff19166001179055565b60006020828403121561057757600080fd5b81356001600160a01b038116811461058e57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156105be576105be610595565b92915050565b818103818111156105be576105be61059556fea26469706673582212200675aea084b24566da87e4e8505586d6698413ff569e70c419670bfa5cea373964736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 18,
        "contract": "contracts/Staker.sol:Staker",
        "label": "exampleExternalContract",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(ExampleExternalContract)12"
      },
      {
        "astId": 20,
        "contract": "contracts/Staker.sol:Staker",
        "label": "deadline",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 43,
        "contract": "contracts/Staker.sol:Staker",
        "label": "balances",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 49,
        "contract": "contracts/Staker.sol:Staker",
        "label": "openForWithdraw",
        "offset": 0,
        "slot": "3",
        "type": "t_bool"
      },
      {
        "astId": 52,
        "contract": "contracts/Staker.sol:Staker",
        "label": "executed",
        "offset": 1,
        "slot": "3",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(ExampleExternalContract)12": {
        "encoding": "inplace",
        "label": "contract ExampleExternalContract",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}